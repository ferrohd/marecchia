name: CI

on:
  push:
    branches: [master]
    paths:
      - 'crates/**'
      - 'marecchia/**'
  pull_request:
    branches: [master]
    paths:
      - 'crates/**'
      - 'marecchia/**'

env:
  CARGO_TERM_COLOR: always

jobs:
    rs-toolchain:
        name: ⚒️ Toolchain
        runs-on: ubuntu-latest
        steps:
          - name: ⚒️ Toolchain Info
            run: |
              cargo --version --verbose
              rustc --version
              cargo clippy --version

    rs-clippy:
        name: 📎 Clippy
        needs: rs-toolchain
        runs-on: ubuntu-latest
        steps:
            - name: 🛒 Checkout
              uses: actions/checkout@v4

            - name: ⚡ Cache
              uses: actions/cache@v4
              with:
                path: |
                  ~/.cargo/bin/
                  ~/.cargo/registry/index/
                  ~/.cargo/registry/cache/
                  ~/.cargo/git/db/
                  target
                key: ${{ runner.os }}-cargo-${{ hashFiles('crates/Cargo.lock') }}

            #- name: 📎 Clippy
            #  working-directory: crates
            #  run: |
            #    cargo rs-clippy --

    rs-build:
        name: 🔨 Build Rust
        needs: rs-toolchain
        runs-on: ubuntu-latest
        steps:
            - name: 🛒 Checkout
              uses: actions/checkout@v4

            - name: ⚡ Cache
              uses: actions/cache@v4
              with:
                path: |
                  ~/.cargo/bin/
                  ~/.cargo/registry/index/
                  ~/.cargo/registry/cache/
                  ~/.cargo/git/db/
                  target
                key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

            - name: 🪛 Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'

            - name: 📦 Install wasm-pack
              working-directory: crates
              run: |
                npm install -g wasm-pack

            - name: 🎯 Install WASM Target
              working-directory: crates
              run: |
                rustup target add wasm32-unknown-unknown

            - name: 🔨 Build
              working-directory: crates/marecchia-core
              run: |
                wasm-pack build --target web --scope marecchia

            - name: 💾 Save Artifact
              uses: actions/upload-artifact@v4
              with:
                name: marecchia-core
                path: ./crates/marecchia-core/pkg

    rs-test:
        name: 🧪 Test
        needs: rs-toolchain
        runs-on: ubuntu-latest
        steps:
            - name: 🛒 Checkout
              uses: actions/checkout@v4

            - name: ⚡ Cache
              uses: actions/cache@v4
              with:
                path: |
                  ~/.cargo/bin/
                  ~/.cargo/registry/index/
                  ~/.cargo/registry/cache/
                  ~/.cargo/git/db/
                  target
                key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

            #- name: 🧪 Test
            #  working-directory: crates
            #  run: |
            #    cargo rs-test --all

    ts-build:
        name: 🛠️ Build Typescript
        runs-on: ubuntu-latest
        needs: rs-build
        strategy:
          fail-fast: true
          matrix:
            packages:
              - name: '@marecchia/hlsjs'
                path: 'hlsjs'

        steps:
            - name: 🛒 Checkout
              uses: actions/checkout@v4

            - name: 🪛 Setup Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'

            - name: Get @marecchia/marecchia-core
              uses: actions/download-artifact@v4
              with:
                name: marecchia-core
                path: ./crates/marecchia-core/pkg

            - name: 📦 Install Dependencies
              working-directory: './marecchia/${{ matrix.packages.path }}'
              run: |
                npm install

            - name: 🛠️ Build
              working-directory: './marecchia/${{ matrix.packages.path }}'
              run: |
                npm build

            - name: 🗑️ Delete Artifact
              uses: geekyeggo/delete-artifact@v5
              with:
                  name: marecchia-core
